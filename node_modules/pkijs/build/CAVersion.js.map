{"version":3,"sources":["../src/CAVersion.js"],"names":["asn1js","CAVersion","constructor","parameters","certificateIndex","defaultValues","keyIndex","fromSchema","schema","memberName","Error","Integer","blockName","value","valueBlock","valueHex","slice","valueView","Uint8Array","byteLength","tempValue","ArrayBuffer","tempValueView","set","keyIndexBuffer","keyIndexView8","temp","keyIndexView16","Uint16Array","certificateIndexBuffer","certificateIndexView8","certificateIndexView16","toSchema","certificateIndexView","keyIndexView","toJSON"],"mappings":"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","file":"CAVersion.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from https://docs.microsoft.com/en-us/windows/desktop/seccrypto/certification-authority-renewal\r\n */\r\nexport default class CAVersion\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CAVersion class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc certificateIndex\r\n\t\t */\r\n\t\tthis.certificateIndex = getParametersValue(parameters, \"certificateIndex\", CAVersion.defaultValues(\"certificateIndex\"));\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc keyIndex\r\n\t\t */\r\n\t\tthis.keyIndex = getParametersValue(parameters, \"keyIndex\", CAVersion.defaultValues(\"keyIndex\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certificateIndex\":\r\n\t\t\tcase \"keyIndex\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CAVersion class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * CAVersion ::= INTEGER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\treturn (new asn1js.Integer());\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tif(schema.constructor.blockName() !== asn1js.Integer.blockName())\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CAVersion\");\r\n\t\t//endregion\r\n\r\n\t\t//region Check length of the input value and correct it if needed\r\n\t\tlet value = schema.valueBlock.valueHex.slice(0);\r\n\t\tconst valueView = new Uint8Array(value);\r\n\r\n\t\tswitch(true)\r\n\t\t{\r\n\t\t\tcase (value.byteLength < 4):\r\n\t\t\t{\r\n\t\t\t\tconst tempValue = new ArrayBuffer(4);\r\n\t\t\t\tconst tempValueView = new Uint8Array(tempValue);\r\n\r\n\t\t\t\ttempValueView.set(valueView, 4 - value.byteLength);\r\n\r\n\t\t\t\tvalue = tempValue.slice(0);\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase (value.byteLength > 4):\r\n\t\t\t{\r\n\t\t\t\tconst tempValue = new ArrayBuffer(4);\r\n\t\t\t\tconst tempValueView = new Uint8Array(tempValue);\r\n\r\n\t\t\t\ttempValueView.set(valueView.slice(0, 4));\r\n\r\n\t\t\t\tvalue = tempValue.slice(0);\r\n\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tconst keyIndexBuffer = value.slice(0, 2);\r\n\t\tconst keyIndexView8 = new Uint8Array(keyIndexBuffer);\r\n\t\tlet temp = keyIndexView8[0];\r\n\t\tkeyIndexView8[0] = keyIndexView8[1];\r\n\t\tkeyIndexView8[1] = temp;\r\n\r\n\t\tconst keyIndexView16 = new Uint16Array(keyIndexBuffer);\r\n\r\n\t\tthis.keyIndex = keyIndexView16[0];\r\n\r\n\t\tconst certificateIndexBuffer = value.slice(2);\r\n\t\tconst certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\r\n\t\ttemp = certificateIndexView8[0];\r\n\t\tcertificateIndexView8[0] = certificateIndexView8[1];\r\n\t\tcertificateIndexView8[1] = temp;\r\n\r\n\t\tconst certificateIndexView16 = new Uint16Array(certificateIndexBuffer);\r\n\r\n\t\tthis.certificateIndex = certificateIndexView16[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create raw values\r\n\t\tconst certificateIndexBuffer = new ArrayBuffer(2);\r\n\t\tconst certificateIndexView = new Uint16Array(certificateIndexBuffer);\r\n\r\n\t\tcertificateIndexView[0] = this.certificateIndex;\r\n\r\n\t\tconst certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\r\n\t\tlet temp = certificateIndexView8[0];\r\n\t\tcertificateIndexView8[0] = certificateIndexView8[1];\r\n\t\tcertificateIndexView8[1] = temp;\r\n\r\n\t\tconst keyIndexBuffer = new ArrayBuffer(2);\r\n\t\tconst keyIndexView = new Uint16Array(keyIndexBuffer);\r\n\r\n\t\tkeyIndexView[0] = this.keyIndex;\r\n\r\n\t\tconst keyIndexView8 = new Uint8Array(keyIndexBuffer);\r\n\t\ttemp = keyIndexView8[0];\r\n\t\tkeyIndexView8[0] = keyIndexView8[1];\r\n\t\tkeyIndexView8[1] = temp;\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Integer({\r\n\t\t\tvalueHex: utilConcatBuf(keyIndexBuffer, certificateIndexBuffer)\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tcertificateIndex: this.certificateIndex,\r\n\t\t\tkeyIndex: this.keyIndex\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}